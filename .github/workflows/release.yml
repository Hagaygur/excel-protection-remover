name: Auto Build and Release

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:     # Allows manual triggering from the Actions tab

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up .NET 7
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Get the latest release tag
        id: get_latest_release
        shell: bash
        run: |
          latest_release_tag=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.tag_name')
          echo "Latest release tag: $latest_release_tag"
          echo "::set-output name=tag::$latest_release_tag"

      - name: Determine if there are changes since the last release
        id: check_changes
        shell: bash
        run: |
          if [ "${{ steps.get_latest_release.outputs.tag }}" = "null" ]; then
            echo "No previous releases found."
            echo "::set-output name=changes::true"
          else
            git fetch --tags
            latest_release_commit=$(git rev-list -n 1 ${{ steps.get_latest_release.outputs.tag }})
            echo "Latest release commit: $latest_release_commit"
            changes=$(git rev-list $latest_release_commit..HEAD)
            if [ -z "$changes" ]; then
              echo "No changes since the last release."
              echo "::set-output name=changes::false"
            else
              echo "Changes detected since the last release."
              echo "::set-output name=changes::true"
            fi
          fi

      - name: Exit if no changes
        if: steps.check_changes.outputs.changes == 'false'
        run: |
          echo "No changes detected since the last release. Exiting."
          exit 0

      - name: Build the application
        run: |
          dotnet publish -c Release -r win-x64 --self-contained true /p:PublishSingleFile=true /p:PublishTrimmed=true /p:TrimMode=link

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ github.run_number }}
          release_name: "Automated Release - ${{ github.run_number }}"
          body: |
            Automated release generated by GitHub Actions.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/Release/net7.0/win-x64/publish/XlProtectionRemover.exe
          asset_name: XlProtectionRemover.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
